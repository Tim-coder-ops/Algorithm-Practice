//There are 3n piles of coins of varying size, you and your friends will take piles of coins as follows:
//
//In each step, you will choose any 3 piles of coins (not necessarily consecutive).
//Of your choice, Alice will pick the pile with the maximum number of coins.
//You will pick the next pile with maximum number of coins.
//Your friend Bob will pick the last pile.
//Repeat until there are no more piles of coins.
//Given an array of integers piles where piles[i] is the number of coins in the ith pile.
//
//Return the maximum number of coins which you can have.

public int MaxCoins(int[] piles) {
        
        int maxCoins = 0;
        int turn = 1;
        
        for(int i = 0; i < piles.Length; i++)
        {
            int maxStack = 0;
            int place = 0;
            int minStack = 10000;
            int minPlace = 0;
            
            if(turn == 4) turn = 1;
            
            for(int j = 0; j < piles.Length; j++)
            {
                if(piles[j] > maxStack)
                {
                    maxStack = piles[j];
                    place = j;
                }
                if(piles[j] != 0 && piles[j] < minStack )
                {
                    minStack = piles[j];
                    minPlace = j;
                }
            }
            
            if(turn == 1)
            {
                piles[place] = 0;
                turn++;
            }
            
            else if(turn == 2) 
            {
                maxCoins += piles[place];
                piles[place] = 0;
                turn++;
            }
            else if(turn == 3)
            {
                piles[minPlace] = 0;
                turn++;
            }
   
        }
        
        return maxCoins;
    }
