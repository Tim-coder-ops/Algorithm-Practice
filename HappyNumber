//Write an algorithm to determine if a number n is "happy".
//
//A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.
//
//Return True if n is a happy number, and False if not.
//
//Example: 
//
//Input: 19
//Output: true
//Explanation: 
//12 + 92 = 82
//82 + 22 = 68
//62 + 82 = 100
//12 + 02 + 02 = 1

public bool IsHappy(int n) {
        
        
        bool result = false;
        int count = 0;
        
        while( result == false)
        {
            List<int> nums = new List<int>();
            
            while(n !=0)
        {
            nums.Add(n % 10);
            n /= 10;
        }
            
            for(int i = 0; i < nums.Count; i++)
            {
                n += (nums[i] * nums[i]);
            }
            
            count++;
            if(n == 1) return true;
            else if( count == 12) return false;
        }
        
        return false;
        
    }
