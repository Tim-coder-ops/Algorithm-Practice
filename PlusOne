//Given a non-empty array of digits representing a non-negative integer, increment one to the integer.

//The digits are stored such that the most significant digit is at the head of the list, and each element in the array contains a single digit.

//You may assume the integer does not contain any leading zero, except the number 0 itself.

public class Solution {
    public int[] PlusOne(int[] digits) {
        
        for(int i = digits.Length-1; i >=0; i--)
        {
            if(digits[i] < 9 && i == digits.Length-1)
            {
                digits[i]++;
                return digits;
            }
            else if(digits[i] == 9 && digits.Length == 1)
            {
                int[] output = new int[digits.Length +1];
                output[0] = 1;
                return output;
            }
            
            
            else if(i != 0  && digits[i] == 9 )
            {
                
                 if(digits[i-1] < 9)
                {
                    digits[i-1]++;
                    digits[i] = 0;
                    return digits;
                }
                
                else
                {
                    digits[i-1]++;
                    digits[i] = 0;
                }
            }
            
            
            else if(i != 0 && digits[i] == 10 )
            {
                digits[i-1]++;
                digits[i] = 0;
            }
            
            else if(i == 0 && digits[i] == 10 )
            {
                int[] output = new int[digits.Length +1];
                output[0] = 1;
                return output;
            }
        }
        
        return digits;
    }
}

// Need to look at optimizing after learning new concepts
